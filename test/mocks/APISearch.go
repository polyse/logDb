// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	meilisearch "github.com/meilisearch/meilisearch-go"
	mock "github.com/stretchr/testify/mock"
)

// APISearch is an autogenerated mock type for the APISearch type
type APISearch struct {
	mock.Mock
}

// Client provides a mock function with given fields:
func (_m *APISearch) Client() meilisearch.ClientInterface {
	ret := _m.Called()

	var r0 meilisearch.ClientInterface
	if rf, ok := ret.Get(0).(func() meilisearch.ClientInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(meilisearch.ClientInterface)
		}
	}

	return r0
}

// IndexID provides a mock function with given fields:
func (_m *APISearch) IndexID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Search provides a mock function with given fields: params
func (_m *APISearch) Search(params meilisearch.SearchRequest) (*meilisearch.SearchResponse, error) {
	ret := _m.Called(params)

	var r0 *meilisearch.SearchResponse
	if rf, ok := ret.Get(0).(func(meilisearch.SearchRequest) *meilisearch.SearchResponse); ok {
		r0 = rf(params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*meilisearch.SearchResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(meilisearch.SearchRequest) error); ok {
		r1 = rf(params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
