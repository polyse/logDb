// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	meilisearch "github.com/senyast4745/meilisearch-go"
	mock "github.com/stretchr/testify/mock"
)

// APIUpdates is an autogenerated mocks type for the APIUpdates type
type APIUpdates struct {
	mock.Mock
}

// Client provides a mocks function with given fields:
func (_m *APIUpdates) Client() meilisearch.ClientInterface {
	ret := _m.Called()

	var r0 meilisearch.ClientInterface
	if rf, ok := ret.Get(0).(func() meilisearch.ClientInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(meilisearch.ClientInterface)
		}
	}

	return r0
}

// Get provides a mocks function with given fields: id
func (_m *APIUpdates) Get(id int64) (*meilisearch.Update, error) {
	ret := _m.Called(id)

	var r0 *meilisearch.Update
	if rf, ok := ret.Get(0).(func(int64) *meilisearch.Update); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*meilisearch.Update)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IndexID provides a mocks function with given fields:
func (_m *APIUpdates) IndexID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// List provides a mocks function with given fields:
func (_m *APIUpdates) List() ([]meilisearch.Update, error) {
	ret := _m.Called()

	var r0 []meilisearch.Update
	if rf, ok := ret.Get(0).(func() []meilisearch.Update); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]meilisearch.Update)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
