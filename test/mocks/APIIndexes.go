// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	meilisearch "github.com/senyast4745/meilisearch-go"
	mock "github.com/stretchr/testify/mock"
)

// APIIndexes is an autogenerated mocks type for the APIIndexes type
type APIIndexes struct {
	mock.Mock
}

// Create provides a mocks function with given fields: request
func (_m *APIIndexes) Create(request meilisearch.CreateIndexRequest) (*meilisearch.CreateIndexResponse, error) {
	ret := _m.Called(request)

	var r0 *meilisearch.CreateIndexResponse
	if rf, ok := ret.Get(0).(func(meilisearch.CreateIndexRequest) *meilisearch.CreateIndexResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*meilisearch.CreateIndexResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(meilisearch.CreateIndexRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mocks function with given fields: uid
func (_m *APIIndexes) Delete(uid string) (bool, error) {
	ret := _m.Called(uid)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(uid)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(uid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mocks function with given fields: uid
func (_m *APIIndexes) Get(uid string) (*meilisearch.Index, error) {
	ret := _m.Called(uid)

	var r0 *meilisearch.Index
	if rf, ok := ret.Get(0).(func(string) *meilisearch.Index); ok {
		r0 = rf(uid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*meilisearch.Index)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(uid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mocks function with given fields:
func (_m *APIIndexes) List() ([]meilisearch.Index, error) {
	ret := _m.Called()

	var r0 []meilisearch.Index
	if rf, ok := ret.Get(0).(func() []meilisearch.Index); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]meilisearch.Index)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateName provides a mocks function with given fields: uid, name
func (_m *APIIndexes) UpdateName(uid string, name string) (*meilisearch.Index, error) {
	ret := _m.Called(uid, name)

	var r0 *meilisearch.Index
	if rf, ok := ret.Get(0).(func(string, string) *meilisearch.Index); ok {
		r0 = rf(uid, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*meilisearch.Index)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(uid, name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePrimaryKey provides a mocks function with given fields: uid, primaryKey
func (_m *APIIndexes) UpdatePrimaryKey(uid string, primaryKey string) (*meilisearch.Index, error) {
	ret := _m.Called(uid, primaryKey)

	var r0 *meilisearch.Index
	if rf, ok := ret.Get(0).(func(string, string) *meilisearch.Index); ok {
		r0 = rf(uid, primaryKey)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*meilisearch.Index)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(uid, primaryKey)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
